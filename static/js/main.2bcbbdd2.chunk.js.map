{"version":3,"sources":["containers/Dashboard.module.css","images/lfs_logo.png","components/LoginBanner.module.css","reducers/authReducer.js","reducers/mailReducer.js","reducers/progressReducer.js","reducers/index.js","actions/actionTypes.js","common/common.js","common/google-auth.js","components/SignStatusBlock.jsx","components/Header.js","config.js","components/LoadingBanner.jsx","components/LoginBanner.jsx","components/ErrorsTable.jsx","common/google-mail.js","common/core.js","containers/Dashboard.jsx","actions/authActions.js","actions/mailActions.js","actions/progressActions.js","containers/App.jsx","serviceWorker.js","index.js","components/Header.module.css","components/ErrorsTable.module.css","components/SignInSignOutBlock.module.css","components/LoadingBanner.module.css"],"names":["module","exports","throwNotInitialized","Error","initialState","initialized","isSignedIn","profile","tokens","error","undefined","signIn","signOut","client","active","max","current","message","rootReducer","combineReducers","auth","state","action","type","mail","progress","awaitWindowLoad","selectorFunc","onReady","timer","setInterval","result","clearInterval","getAuthData","auth2","user","currentUser","get","basicProfile","getBasicProfile","authResponse","getAuthResponse","googleId","getId","imageUrl","getImageUrl","email","getEmail","name","getName","givenName","getGivenName","familyName","getFamilyName","idToken","id_token","accessToken","access_token","useGoogleAuth","clientId","hostedDomain","scope","onInitialized","onInitializationError","onSignedIn","onSignedOut","useEffect","onInit","onError","clientConfig","client_id","cookie_policy","hosted_domain","fetch_basic_profile","ux_mode","window","gapi","load","init","then","initGoogleAuthLib","listen","_","noop","err","console","disconnect","authData","SignStatusBlock","disabled","userPickLink","onSignOutClicked","className","styles","container","avatarContainer","size","icon","src","nameAndButtonContainer","userNameSpan","href","onClick","e","preventDefault","Header","header","span","offset","logoContainer","LfsLogo","width","alt","logo","titleContainer","logoTitle","target","dayjs","fromNow","LoadingBanner","errors","havePercent","percent","Math","round","parseInt","status","map","errorAlert","LoginBanner","onSignInClicked","subjectColumn","readIds","title","dataIndex","key","render","subject","open","actions","id","rel","classNames","unread","has","slice","dateColumn","date","d","format","placement","expandedRowRender","others","isEmpty","columns","showHeader","rowKey","dataSource","pagination","pageSize","position","hideOnSinglePage","ErrorsTable","messages","onMarkReadClicked","onMarkUnreadClicked","onMoveToTrashClicked","useState","selectedRowKeys","setSelectedRowKeys","rowSelection","onChange","mainTableColumns","useMemo","number","buttonsContainer","selectionCount","length","useGoogleMail","apiKey","params","discoveryDocs","initGmailLib","applyChunkedAndConcat","ids","chunkSize","func","a","chunk","idsChunk","concat","prepareBatchAndExecute","timeoutMs","prepare","parse","batch","newBatch","forEach","add","Promise","resolve","reject","setTimeout","response","moveToTrash","onProgress","total","request","method","path","uniqueCodes","uniq","values","log","JSON","stringify","getMessages","metadataHeaders","listAllIds","pageToken","after","subtract","mailList","gmail","users","list","userId","q","nextPageToken","isNil","mainStorage","localforage","createInstance","mailsStorage","transformSavedReadIds","getReadIds","oldReadIds","newReadIds","setItem","toArray","markRead","newIds","union","markUnread","Set","getItem","filterNewIds","keys","knownKeys","filter","sanitizeSubject","replace","saveMessages","headers","payload","find","toLowerCase","value","getAggregatedMessages","all","rest","timestamp","unix","groupBy","compact","entries","last","maxBy","lastId","reverse","sortBy","remove","localhostRun","location","host","includes","mapDispatchToProps","onAuthInit","onAuthInitError","onMailInit","onMailInitError","activateProgress","incrementProgress","deactivateProgress","connect","authInitialized","authError","mailInitialized","mailError","deps","setMessages","setReadIds","doAsync","selectedRowIds","set","partition","newMessages","removed","idsToRemove","flatMap","totalEmails","reduce","acc","Helmet","toString","mainContainer","store","createStore","composeWithDevTools","extend","relativeTime","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2bcbbdd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Dashboard_mainContainer__AvxgX\"};","module.exports = __webpack_public_path__ + \"static/media/lfs_logo.aaf7ea0d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginBanner_container__kdXDu\"};","import {AUTH_INIT, AUTH_INIT_ERROR, AUTH_SIGN_IN, AUTH_SIGN_OUT} from '../actions/actionTypes';\n\nconst throwNotInitialized = () => {\n  throw Error('gauth is not initialized yet');\n};\n\nconst initialState = {\n  initialized: false,\n  isSignedIn: false,\n  profile: {},\n  tokens: {},\n  error: undefined,\n  signIn: throwNotInitialized,\n  signOut: throwNotInitialized,\n};\n\n\nexport const authReducer = (state = initialState, action) => {\n  const { signIn, signOut, error, profile, tokens } = action;\n  switch (action.type) {\n    case AUTH_INIT:\n      return { ...state, initialized: true, signIn, signOut };\n    case AUTH_INIT_ERROR:\n      return { ...initialState, error };\n    case AUTH_SIGN_IN:\n      return { ...state, isSignedIn: true, profile, tokens };\n    case AUTH_SIGN_OUT:\n      return { ...state, isSignedIn: false, profile: {}, tokens: {} };\n    default:\n      return state;\n  }\n};","import {MAIL_INIT, MAIL_INIT_ERROR} from '../actions/actionTypes';\n\nconst initialState = {\n  initialized: false,\n  client: undefined,\n  error: undefined,\n};\n\nexport const mailReducer = (state = initialState, action) => {\n  const { client, error } = action;\n  switch (action.type) {\n    case MAIL_INIT:\n      return { ...state, client, initialized: true };\n    case MAIL_INIT_ERROR:\n      return { ...initialState, error };\n    default:\n      return state;\n  }\n};","import {PROGRESS_ACTIVATE, PROGRESS_DEACTIVATE, PROGRESS_INCREMENT} from '../actions/actionTypes';\n\nconst initialState = {\n  active: false,\n  max: undefined,\n  current: undefined,\n  message: 'Loading...',\n};\n\n\nexport const progressReducer = (state = initialState, action) => {\n  const { type, message, max, current } = action;\n  switch (type) {\n    case PROGRESS_ACTIVATE:\n      return { ...state, active: true, max, current, message };\n    case PROGRESS_INCREMENT:\n      return { ...state, current: state.current + 1 };\n    case PROGRESS_DEACTIVATE:\n      return { ...state, active: false };\n    default:\n      return state;\n  }\n};\n","import {combineReducers} from 'redux';\nimport {authReducer} from './authReducer';\nimport {mailReducer} from './mailReducer';\nimport {progressReducer} from './progressReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  mail: mailReducer,\n  progress: progressReducer,\n});\n\nexport default rootReducer;","export const AUTH_INIT = 'AUTH_INIT';\nexport const AUTH_INIT_ERROR = 'AUTH_INIT_ERROR';\nexport const AUTH_SIGN_IN = 'AUTH_SIGN_IN';\nexport const AUTH_SIGN_OUT = 'AUTH_SIGN_OUT';\n\nexport const MAIL_INIT = 'MAIL_INIT';\nexport const MAIL_INIT_ERROR = 'MAIL_INIT_ERROR';\n\nexport const PROGRESS_ACTIVATE = 'PROGRESS_ACTIVATE';\nexport const PROGRESS_INCREMENT = 'PROGRESS_INCREMENT';\nexport const PROGRESS_DEACTIVATE = 'PROGRESS_DEACTIVATE';","import {useEffect} from 'react';\n\nexport const awaitWindowLoad = (selectorFunc, onReady) => {\n  const timer = setInterval(\n    () => {\n      const result = selectorFunc();\n      if (result) {\n        clearInterval(timer);\n        onReady(result);\n      }\n    },\n    100);\n};\n\nexport const useAsyncEffect = (func, deps) => {\n  useEffect(() => {\n    const doAsync = async () => {\n      await func();\n    };\n    doAsync();\n  }, deps);\n};","import {useEffect} from 'react';\nimport _ from 'lodash';\nimport {awaitWindowLoad} from './common';\n\nconst initGoogleAuthLib = ({ clientId, hostedDomain, scope, onInit, onError }) => {\n  const clientConfig = {\n    client_id: clientId,\n    cookie_policy: 'single_host_origin',\n    hosted_domain: hostedDomain,\n    fetch_basic_profile: true,\n    ux_mode: 'popup',\n    scope,\n  };\n  awaitWindowLoad(() => window.gapi, (gapi) => {\n    gapi.load(\n      'auth2',\n      () => gapi.auth2.init(clientConfig).then(onInit, onError),\n      onError,\n    );\n  });\n};\n\n\nconst getAuthData = (auth2) => {\n  const user = auth2.currentUser.get();\n  if (user === undefined) return {\n    isSignedIn: false,\n    profile: {},\n    tokens: {},\n  };\n  const basicProfile = user.getBasicProfile();\n  const authResponse = user.getAuthResponse();\n  const isSignedIn = user.isSignedIn();\n  const profile = basicProfile === undefined ? {} : {\n    googleId: basicProfile.getId(),\n    imageUrl: basicProfile.getImageUrl(),\n    email: basicProfile.getEmail(),\n    name: basicProfile.getName(),\n    givenName: basicProfile.getGivenName(),\n    familyName: basicProfile.getFamilyName(),\n  };\n  const tokens = authResponse === undefined ? {} : {\n    idToken: authResponse.id_token,\n    accessToken: authResponse.access_token,\n  };\n  return {\n    isSignedIn,\n    profile,\n    tokens,\n  };\n};\n\nexport const useGoogleAuth = (\n  {\n    clientId,\n    hostedDomain,\n    scope,\n    onInitialized,\n    onInitializationError,\n    onSignedIn,\n    onSignedOut,\n  }) => {\n  useEffect(() => {\n    const onInit = (auth2) => {\n      auth2.isSignedIn.listen((isSignedIn) => {\n        isSignedIn ? onSignedIn(getAuthData(auth2)) : onSignedOut();\n      });\n      const signIn = () => auth2.signIn().then(_.noop, err => console.error(`Got error:`, err));\n      const signOut = () => auth2.signOut().then(auth2.disconnect());\n      onInitialized({ signIn, signOut });\n      const authData = getAuthData(auth2);\n      const { isSignedIn } = authData;\n      if (isSignedIn) onSignedIn(authData);\n    };\n    const onError = (error) => {\n      onInitializationError(error);\n    };\n    initGoogleAuthLib({ clientId, hostedDomain, scope, onInit, onError });\n  }, []);\n};\n\n","import React from 'react';\nimport styles from './SignInSignOutBlock.module.css';\nimport {Avatar} from 'antd';\n\nconst SignStatusBlock = ({ disabled, name, userPickLink, onSignOutClicked }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.avatarContainer}>\n        <Avatar size={48} icon='user' src={userPickLink}/>\n      </div>\n      <div className={styles.nameAndButtonContainer}>\n        <div className={styles.userNameSpan}>{name}</div>\n        {disabled ? <span>Sign out</span> :\n          <a href=''\n             onClick={(e) => {\n               e.preventDefault();\n               onSignOutClicked();\n             }}>\n            Sign out\n          </a>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default SignStatusBlock;","import React from 'react';\nimport styles from './Header.module.css';\nimport {Col, Row} from 'antd';\nimport LfsLogo from '../images/lfs_logo.png';\nimport SignStatusBlock from './SignStatusBlock';\nimport {released, releaseLink, version} from '../config';\nimport dayjs from 'dayjs';\n\nconst Header = ({ name, imageUrl, isSignedIn, signOut }) => {\n  return (\n    <header className={styles.header}>\n      <Row>\n        <Col span={12} offset={2}>\n          <div className={styles.logoContainer}>\n            <img src={LfsLogo} width='48px' alt='Logo' className={styles.logo}/>\n            <div className={styles.titleContainer}>\n              <h1 className={styles.logoTitle}>LFS Errors Dashboard</h1>\n              &nbsp;&nbsp;\n              <a href={releaseLink} target='_blank'>{version}</a>&nbsp;released {dayjs(released).fromNow()}\n            </div>\n          </div>\n        </Col>\n        <Col offset={4} span={4}>\n          {isSignedIn && <SignStatusBlock name={name}\n                                          userPickLink={imageUrl}\n                                          onSignOutClicked={signOut}\n          />}\n        </Col>\n      </Row>\n    </header>\n  );\n};\n\nexport default Header;","export const version = 'v0.5.0';\nexport const released = '2020-02-26T01:04:03+03:00';\nexport const releaseLink = 'https://github.com/burkov/lfs-errors-dashboard/releases/tag/v0.5.0';\n","import React from 'react';\nimport {Alert, Progress, Spin} from 'antd';\nimport styles from './LoadingBanner.module.css';\n\nconst LoadingBanner = ({ current, max, message, errors }) => {\n  const havePercent = current !== undefined && max !== undefined;\n  const percent = havePercent && (\n    Math.round(parseInt(current) * 100 / parseInt(max))\n  );\n  return (\n    <div className={styles.container}>\n      <Spin size='large'/>\n      <p className={styles.message}>{message}</p>\n      {havePercent && <Progress percent={percent} status='active'/>}\n      {errors.map((error) => <Alert message={error} type='error' className={styles.errorAlert}/>)}\n    </div>\n  );\n};\n\nexport default LoadingBanner;","import React from 'react';\nimport styles from './LoginBanner.module.css';\nimport {Button} from 'antd';\n\n\nconst LoginBanner = ({ onSignInClicked, disabled }) => {\n  return (\n    <div className={styles.container}>\n      <p>To start using the app sign in to your <strong>@jetbrains.com</strong> account</p>\n      <Button disabled={disabled} onClick={onSignInClicked}>Sign in</Button>\n    </div>\n  );\n};\n\nexport default LoginBanner;","import React, {useMemo, useState} from 'react';\nimport {Button, Table, Tooltip} from 'antd';\nimport dayjs from 'dayjs';\nimport styles from './ErrorsTable.module.css';\nimport _ from 'lodash';\nimport classNames from 'classnames';\n\nconst subjectColumn = (readIds) => ({\n  title: 'Subject',\n  dataIndex: 'subject',\n  key: 'subject',\n  render: (subject, { actions: { open }, id }) => {\n    return (\n      <>\n        <a href={open} target='_blank' rel=\"noopener noreferrer\">\n          <Button icon='link' type='link'/>\n        </a>\n        &nbsp;\n        <span className={classNames({ [styles.unread]: readIds && !readIds.has(id) })}>\n          {subject.slice(0, 160)}\n        </span>\n      </>\n    );\n  },\n});\n\nconst dateColumn = ({ title, readIds }) => ({\n  title,\n  dataIndex: 'date',\n  key: 'date',\n  render: (date, { id }) => {\n    const d = dayjs(date);\n    return (\n      <Tooltip title={d.format()} placement='bottom'>\n        <span className={classNames({ [styles.unread]: readIds && !readIds.has(id) })}>\n          {d.fromNow()}\n        </span>\n      </Tooltip>\n    );\n  },\n});\n\nconst expandedRowRender = ({ others }) => {\n  if (_.isEmpty(others)) return false;\n  const columns = [\n    dateColumn({ title: 'Date' }),\n    subjectColumn(),\n  ];\n  return <Table\n    showHeader={false}\n    rowKey='id'\n    dataSource={others}\n    columns={columns}\n    size='small'\n    pagination={{\n      pageSize: 10,\n      position: 'bottom',\n      hideOnSinglePage: true,\n    }}\n  />;\n};\n\nconst ErrorsTable = ({ messages, onMarkReadClicked, onMarkUnreadClicked, onMoveToTrashClicked, readIds }) => {\n  const [ selectedRowKeys, setSelectedRowKeys ] = useState([]);\n  const rowSelection = {\n    onChange: setSelectedRowKeys,\n  };\n  const mainTableColumns = useMemo(() => [\n    dateColumn({ title: 'Last', readIds }),\n    {\n      title: '# of similar',\n      dataIndex: 'number',\n      key: 'number',\n      render: (number, { id }) => {\n        return (\n          <span className={classNames({ [styles.unread]: !readIds.has(id) })}>\n          {number}\n        </span>\n        );\n      },\n    },\n    subjectColumn(readIds),\n  ], [ readIds ]);\n  return (\n    <>\n      <div className={styles.buttonsContainer}>\n        <Button icon='check' onClick={() => onMarkReadClicked(selectedRowKeys)}>Mark read</Button>\n        &nbsp;\n        <Button icon='close' onClick={() => onMarkUnreadClicked(selectedRowKeys)}>Mark un-read</Button>\n        &nbsp;\n        <Button icon='delete' type='danger' onClick={() => {\n          onMoveToTrashClicked(selectedRowKeys);\n          setSelectedRowKeys([]);\n        }}>Move to trash</Button>\n        <div className={styles.selectionCount}>\n          {selectedRowKeys.length} threads selected\n        </div>\n      </div>\n      <Table\n        rowKey='id'\n        dataSource={messages}\n        columns={mainTableColumns}\n        size='small'\n        pagination={false}\n        expandedRowRender={expandedRowRender}\n        rowSelection={rowSelection}\n      />\n    </>\n  );\n};\n\n\nexport default ErrorsTable;","import {useEffect} from 'react';\nimport {awaitWindowLoad} from './common';\nimport _ from 'lodash';\nimport dayjs from 'dayjs';\n\nconst initGmailLib = ({ apiKey, onInit, onError }) => {\n  const params = {\n    apiKey: apiKey,\n    discoveryDocs: [ 'https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest' ],\n  };\n  awaitWindowLoad(() => window.gapi, (gapi) => {\n    gapi.load(\n      'client',\n      () => gapi.client.init(params).then(onInit, onError),\n      onError,\n    );\n  });\n};\n\nexport const useGoogleMail = ({ apiKey, onInitialized, onInitializationError }) => {\n  useEffect(() => {\n    initGmailLib({\n      apiKey,\n      onInit: () => {\n        onInitialized(window.gapi.client);\n      },\n      onError: onInitializationError,\n    });\n  }, []);\n};\n\nconst applyChunkedAndConcat = async (ids, chunkSize, func) => {\n  if (_.isEmpty(ids)) return [];\n  let result = [];\n  for (const idsChunk of _.chunk(ids, chunkSize)) {\n    result = result.concat(await func(idsChunk));\n  }\n  return result;\n};\n\nconst prepareBatchAndExecute = (client, ids, timeoutMs, prepare, parse) => {\n  const batch = client.newBatch();\n  ids.forEach((id) => {\n    batch.add(prepare(id));\n  });\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      batch.then(\n        (response) => {\n          parse(response, resolve);\n        },\n        (e) => reject(e),\n      );\n    }, timeoutMs);\n  });\n};\n\nexport const moveToTrash = async (client, ids, onProgress) => {\n  let total = 0;\n  const chunkSize = 50;\n  const timeoutMs = 300;\n  return await applyChunkedAndConcat(ids, chunkSize, async (chunk) => {\n    await prepareBatchAndExecute(client, chunk, timeoutMs,\n      (id) => client.request({\n        method: 'POST',\n        path: `gmail/v1/users/me/messages/${id}/trash`,\n      }),\n      (response, resolve) => {\n        const { result } = response;\n        const uniqueCodes = _.uniq(_.map(_.values(result), (e) => _.get(e, 'status')));\n        console.log(`codes: ${JSON.stringify(uniqueCodes)}`);\n        resolve(undefined);\n      });\n    total += chunkSize;\n    onProgress(total);\n  });\n};\n\nexport const getMessages = async (client, ids) => {\n  return await applyChunkedAndConcat(ids, 100, (chunk) => {\n    return prepareBatchAndExecute(client, chunk, 300,\n      (id) => client.request({\n        path: `gmail/v1/users/me/messages/${id}`,\n        params: {\n          format: 'metadata',\n          metadataHeaders: [ 'Subject', 'Date' ],\n        },\n      }),\n      (response, resolve) => {\n        const { result } = response;\n        resolve(_.map(_.values(result), (e) => _.get(e, 'result')));\n      },\n    );\n  });\n};\n\nexport const listAllIds = async (client) => {\n  let pageToken = undefined;\n  let result = [];\n  const after = dayjs().subtract(30, 'day').format('YYYY/MM/DD');\n  const mailList = '(<jetprofile-prod-lfs-notifications.jetbrains.com>)';\n  do {\n    const { result: { messages, nextPageToken } } = await client.gmail.users.messages.list({\n      userId: 'me',\n      q: `list:${mailList} after:${after}`,\n      pageToken,\n    });\n    result = result.concat(_.map(messages, ({ id }) => id));\n    pageToken = nextPageToken;\n  } while (!_.isNil(pageToken));\n\n  return result;\n};\n\n\n","import localforage from 'localforage';\nimport {Set} from 'immutable';\nimport _ from 'lodash';\nimport dayjs from 'dayjs';\n\n\nconst mainStorage = localforage.createInstance({\n  name: 'led-main',\n});\n\nconst mailsStorage = localforage.createInstance({\n  name: 'led-mails',\n});\n\nconst transformSavedReadIds = async (func) => {\n  const oldReadIds = await getReadIds();\n  const newReadIds = func(oldReadIds);\n  await mainStorage.setItem('read-ids', newReadIds.toArray());\n  return newReadIds;\n};\n\nexport const markRead = (newIds) =>\n  transformSavedReadIds((readIds) => readIds.union(newIds));\n\nexport const markUnread = (newIds) =>\n  transformSavedReadIds((readIds) => readIds.subtract(newIds));\n\n/**\n * @returns Set<String>\n */\nexport const getReadIds = async () => {\n  return Set((await mainStorage.getItem('read-ids')) || []);\n};\n\nexport const filterNewIds = async (ids) => {\n  const knownKeys = Set(await mailsStorage.keys());\n  return _.filter(ids, (e) => !knownKeys.has(e));\n};\n\nconst sanitizeSubject = (subject) => {\n  return subject.replace(/^(jetprofile-prod RT error: )/, '');\n};\n\nexport const allSavedIds = () => {\n  return mailsStorage.keys();\n};\n\nexport const saveMessages = async (messages) => {\n  for (const message of messages) {\n    try {\n      const { id, payload: { headers } } = message;\n      const { value: date } = _.find(headers, ({ name }) => name.toLowerCase() === 'date');\n      const { value: subject } = _.find(headers, ({ name }) => name.toLowerCase() === 'subject');\n\n      await mailsStorage.setItem(id, { date, subject: sanitizeSubject(subject) });\n    } catch (e) {\n      console.error(`failed to parse or save message`, message, e);\n    }\n  }\n};\n\nexport const getAggregatedMessages = async (ids) => {\n  const messages = await Promise.all(ids.map(async (id) => {\n    let message = await mailsStorage.getItem(id);\n    if (message === null) {\n      console.error(`failed to fetch mail with id: ${id}`);\n      return undefined;\n    }\n    const { date, ...rest } = message;\n    return {\n      ...rest,\n      id,\n      date,\n      timestamp: dayjs(date).unix(),\n      actions: {\n        open: `https://mail.google.com/mail/u/0/#inbox/${id}`,\n      },\n    };\n  }));\n  const result = _.values(_.groupBy(_.compact(messages), ({ subject }) => {\n    return subject.slice(0, 20);\n  })).map((entries) => {\n    entries.forEach((e) => {\n      e.timestamp = dayjs(e.date).unix();\n    });\n    const last = _.maxBy(entries, 'timestamp');\n    const { id: lastId } = last;\n    return {\n      ...last,\n      number: entries.length,\n      others: _.reverse(_.sortBy(_.remove(entries, ({ id }) => id !== lastId), 'timestamp')),\n    };\n  });\n  return _.reverse(_.sortBy(result, 'timestamp'));\n};","import React, {useState} from 'react';\nimport styles from './Dashboard.module.css';\nimport {connect} from 'react-redux';\nimport * as authActions from '../actions/authActions';\nimport * as mailActions from '../actions/mailActions';\nimport {useGoogleAuth} from '../common/google-auth';\nimport Header from '../components/Header';\nimport LoadingBanner from '../components/LoadingBanner';\nimport LoginBanner from '../components/LoginBanner';\nimport ErrorsTable from '../components/ErrorsTable';\nimport {getMessages, listAllIds, moveToTrash, useGoogleMail} from '../common/google-mail';\nimport {useAsyncEffect} from '../common/common';\nimport * as progressActions from '../actions/progressActions';\nimport {\n  allSavedIds,\n  filterNewIds,\n  getAggregatedMessages,\n  getReadIds,\n  markRead,\n  markUnread,\n  saveMessages,\n} from '../common/core';\nimport {Set} from 'immutable';\nimport _ from 'lodash';\nimport {Helmet} from 'react-helmet/es/Helmet';\n\nconst clientId = '797091362316-t4kt893ttu0ls2gdbjhbq7pn7g2r22tq.apps.googleusercontent.com';\nconst scope = 'https://www.googleapis.com/auth/gmail.modify';\nconst apiKey = 'AIzaSyD-QsOK6xDB1oECO1uEX-PCzi-FeauYGSo';\nconst hostedDomain = 'jetbrains.com';\n\nconst localhostRun = window.location.host.includes('localhost');\n\nconst Dashboard = (\n  {\n    initialized,\n    auth: { isSignedIn, signIn, signOut, profile: { name, imageUrl }, error: authError },\n    mail: { client, error: mailError },\n    progress: { current, max, message },\n    onAuthInit,\n    onAuthInitError,\n    onSignedIn,\n    onSignedOut,\n    onMailInit,\n    onMailInitError,\n    activateProgress,\n    deactivateProgress,\n  },\n) => {\n  const [ messages, setMessages ] = useState([]);\n  const [ readIds, setReadIds ] = useState(Set());\n  useGoogleAuth({\n    clientId,\n    hostedDomain,\n    scope,\n    onSignedIn,\n    onSignedOut,\n    onInitialized: onAuthInit,\n    onInitializationError: onAuthInitError,\n  });\n  useGoogleMail({\n    apiKey,\n    onInitialized: onMailInit,\n    onInitializationError: onMailInitError,\n  });\n  useAsyncEffect(async () => {\n    if (client !== undefined && isSignedIn) {\n      activateProgress({ message: `Loading emails...` });\n      const ids = await (localhostRun ? allSavedIds() : listAllIds(client));\n      activateProgress({ message: `Found ${ids.length} emails in LFS mail list` });\n      const newIds = await filterNewIds(ids);\n      console.log(`New emails: ${newIds.length}`);\n      activateProgress({ message: `Fetching ${newIds.length} new emails` });\n      const result = await getMessages(client, newIds);\n      await saveMessages(result);\n      console.log(`Done saving`);\n      activateProgress({ message: `Processing messages` });\n      setMessages(await getAggregatedMessages(ids));\n      console.log(`Done processing`);\n      setReadIds(await getReadIds());\n      deactivateProgress();\n    }\n  }, [ client, isSignedIn ]);\n\n  const onMarkReadClicked = async (selectedRowIds) => {\n    setReadIds(Set(await markRead(selectedRowIds)));\n  };\n\n  const onMarkUnreadClicked = async (selectedRowIds) => {\n    setReadIds(Set(await markUnread(selectedRowIds)));\n  };\n\n  const onMoveToTrashClicked = async (selectedRowIds) => {\n    const set = Set(selectedRowIds);\n    const [ newMessages, removed ] = _.partition(messages, ({ id }) => !set.has(id));\n    const idsToRemove = _.flatMap(removed, ({ id, others }) => [ id, ...(_.map(others, ({ id }) => id)) ]);\n    activateProgress({ message: 'Moving emails to trash', current: 0, max: idsToRemove.length });\n    await moveToTrash(client, idsToRemove, (current) => {\n      activateProgress({ message: 'Moving emails to trash', current, max: idsToRemove.length });\n    });\n    deactivateProgress();\n    setMessages(newMessages);\n  };\n\n  const totalEmails = _.reduce(messages, (acc, { others }) => others.length + 1 + acc, 0);\n\n  return (\n    <>\n      <Helmet>\n        <title>({totalEmails.toString()}) LFS errors dashboard</title>\n      </Helmet>\n      <Header\n        name={name}\n        imageUrl={imageUrl}\n        isSignedIn={isSignedIn}\n        signOut={signOut}\n      />\n      <main className={styles.mainContainer}>\n        {!initialized ?\n          <LoadingBanner current={current}\n                         max={max}\n                         message={message}\n                         errors={_.compact([ authError, mailError ])}\n          /> :\n          (!isSignedIn ?\n              <LoginBanner onSignInClicked={signIn} disabled={!initialized}/> :\n              <ErrorsTable messages={messages}\n                           onMarkReadClicked={onMarkReadClicked}\n                           onMarkUnreadClicked={onMarkUnreadClicked}\n                           onMoveToTrashClicked={onMoveToTrashClicked}\n                           readIds={readIds}\n              />\n          )}\n      </main>\n    </>\n  );\n};\n\nconst mapStateToProps = (\n  {\n    auth: { initialized: authInitialized, isSignedIn, signIn, signOut, profile, error: authError },\n    mail: { initialized: mailInitialized, client, error: mailError },\n    progress: { active, current, max, message },\n  },\n) => {\n  const initialized = authInitialized\n    && mailInitialized\n    && !active\n    && _.isNil(authError)\n    && _.isNil(mailError);\n  return {\n    initialized,\n    auth: { isSignedIn, signIn, signOut, profile, error: authError },\n    mail: { client, error: mailError },\n    progress: { active, current, max, message },\n  };\n};\n\nconst mapDispatchToProps = {\n  onAuthInit: authActions.init,\n  onAuthInitError: authActions.initError,\n  onSignedIn: authActions.signIn,\n  onSignedOut: authActions.signOut,\n  onMailInit: mailActions.init,\n  onMailInitError: mailActions.initError,\n  activateProgress: progressActions.activateProgress,\n  incrementProgress: progressActions.incrementProgress,\n  deactivateProgress: progressActions.deactivateProgress,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\n","import {AUTH_INIT, AUTH_INIT_ERROR, AUTH_SIGN_IN, AUTH_SIGN_OUT} from './actionTypes';\n\nexport const init = ({ signIn, signOut }) => ({\n  type: AUTH_INIT,\n  signIn,\n  signOut,\n});\n\nexport const initError = (error) => ({\n  type: AUTH_INIT_ERROR,\n  error,\n});\n\nexport const signIn = ({ profile, tokens }) => ({\n  type: AUTH_SIGN_IN,\n  profile,\n  tokens,\n});\n\nexport const signOut = () => ({\n  type: AUTH_SIGN_OUT,\n});\n\n","import {MAIL_INIT, MAIL_INIT_ERROR} from './actionTypes';\n\nexport const init = (client) => ({\n  type: MAIL_INIT, client,\n});\n\nexport const initError = (error) => ({\n  type: MAIL_INIT_ERROR,\n  error,\n});","import {PROGRESS_ACTIVATE, PROGRESS_DEACTIVATE, PROGRESS_INCREMENT} from './actionTypes';\n\nexport const activateProgress = ({ message, current, max }) => ({\n  type: PROGRESS_ACTIVATE,\n  message,\n  current,\n  max,\n});\n\nexport const incrementProgress = () => ({\n  type: PROGRESS_INCREMENT,\n});\n\nexport const deactivateProgress = () => ({\n  type: PROGRESS_DEACTIVATE,\n});","import React from 'react';\n\nimport 'antd/dist/antd.css';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from '../reducers';\nimport Dashboard from './Dashboard';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\ndayjs.extend(relativeTime);\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <Dashboard/>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\",\"logoContainer\":\"Header_logoContainer__39AYI\",\"logo\":\"Header_logo__2ins2\",\"titleContainer\":\"Header_titleContainer__2q2gU\",\"logoTitle\":\"Header_logoTitle__3xLCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"ErrorsTable_buttonsContainer__8kkG8\",\"selectionCount\":\"ErrorsTable_selectionCount__nvLEX\",\"unread\":\"ErrorsTable_unread__3MOKi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignInSignOutBlock_container__2c2bM\",\"userNameSpan\":\"SignInSignOutBlock_userNameSpan__3Fm_h\",\"avatarContainer\":\"SignInSignOutBlock_avatarContainer__11L6Q\",\"nameAndButtonContainer\":\"SignInSignOutBlock_nameAndButtonContainer__pxRSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoadingBanner_container__BeMk5\",\"message\":\"LoadingBanner_message__2DQ7T\",\"errorAlert\":\"LoadingBanner_errorAlert__3JNs6\"};"],"sourceRoot":""}